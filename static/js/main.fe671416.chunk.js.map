{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Container/Container.jsx","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","initialState","connect","dispatch","onSubmit","contactsAction","useState","inputValue","setInputValue","changeInput","e","currentTarget","value","form","preventDefault","type","pattern","title","required","placeholder","onChange","ContactListItem","onDeleteContact","contact","tel","onClick","getFilteredContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","contacts","items","map","Filter","input","defaultProps","state","target","App","createReducer","actions","normalizedName","find","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fe671416.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__x_UhR\",\"name\":\"ContactListItem_name__2NVgS\",\"tel\":\"ContactListItem_tel__3y_U1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2GrdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__39V46\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2MaWp\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\n// eslint-disable-next-line\nexport default { addContact, deleteContact, changeFilter };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState(initialState);\n  const { name, number } = inputValue;\n\n  const changeInput = e => {\n    const { name, value } = e.currentTarget;\n    setInputValue({ ...inputValue, [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setInputValue(initialState);\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter your name\"\n          onChange={changeInput}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter your number\"\n          onChange={changeInput}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactsAction.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={styles.contact}>\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tel}>{number}</p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport ContactListItem from '../ContactListItem';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getFilteredContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilteredContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsAction.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsAction.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst doesContactExist = (state, { payload }) => {\n  const { name } = payload;\n  const normalizedName = name.toLowerCase();\n  if (state.find(contact => contact.name.toLowerCase() === normalizedName)) {\n    alert(`${name} is already in contacts`);\n    return state;\n  }\n  return [...state, payload];\n};\n\nconst items = createReducer([], {\n  [actions.addContact]: doesContactExist,\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from '../redux/contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: { contacts: persistReducer(contactsPersistConfig, contactsReducer) },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}